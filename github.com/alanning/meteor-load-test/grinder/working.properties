# This is a set of demonstration scripts
#grinder.script=hello.clj
#grinder.script=hello_test.clj
#grinder.script=http.clj
#grinder.script=http_instrumented.clj
#grinder.script=http_stats.clj
#grinder.script=http_binding.clj
#grinder.script=http_shared.clj

grinder.script = meteor.clj

grinder.targetUrl = http://localhost:3000/

# Subscriptions and calls expect a json array.  Array elements
# can be either:
#   * string - interpreted as name with no args
#   * object - keys interpreted as name, value must be an array
#              of arguments which will be passed to server
#
# These keywords will be replaced automatically:
#   CLIENTID - id unique to executing thread
#   RUNID - number corresponding to current test run
#
grinder.subscriptions = ["entry-count", {"latest-entries":[60]}]
grinder.calls = [{"addEntry":[{"ownerId":"CLIENTID","name":"load-RUNID","type":"client"}]}]

# Number of simulated clients = processes * threads
# Each client will: 
#   1. Request initial payload
#   2. Request css & scripts found in initial response
#   3. Initiate DDP connection
#   4. Subscribe to subscriptions specified above
#   5. Perform method calls specified above 'runs' number of times
#
# See http://grinder.sourceforge.net/g3/properties.html
# for more options such as, initialSleepTime or processIncrement
#
grinder.processes = 1
grinder.threads = 1
grinder.runs = 1000


# Set debug to true to see collection updates from server
grinder.debug = false

# for some reason, the log directory required restating
grinder.logDirectory = log
